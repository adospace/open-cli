name: .NET 9 Release Build

on:
  push:
    tags:
      - 'v*'  # Trigger on any tag starting with 'v' (e.g., v1.0.0)
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (without v prefix)'
        required: true
        default: '1.0.0'
      prerelease:
        description: 'Is this a prerelease?'
        type: boolean
        default: false

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build project
      run: dotnet build --no-restore --configuration Release
      
    - name: Test
      run: dotnet test --no-build --configuration Release
      
    - name: Get version from tag or input
      id: get_version
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          echo "PRERELEASE=${{ github.event.inputs.prerelease }}" >> $GITHUB_OUTPUT
        else
          echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
          echo "PRERELEASE=false" >> $GITHUB_OUTPUT
        fi
      
    - name: Publish Windows (x64)
      run: dotnet publish --no-build --configuration Release -r win-x64 -p:PublishSingleFile=true --self-contained true -o ./publish/win-x64
      
    - name: Publish macOS (x64)
      run: dotnet publish --no-build --configuration Release -r osx-x64 -p:PublishSingleFile=true --self-contained true -o ./publish/osx-x64
      
    - name: Publish Linux (x64)
      run: dotnet publish --no-build --configuration Release -r linux-x64 -p:PublishSingleFile=true --self-contained true -o ./publish/linux-x64
      
    - name: Zip Windows artifacts
      run: cd ./publish/win-x64 && zip -r ../../YourAppName-${{ steps.get_version.outputs.VERSION }}-win-x64.zip .
      
    - name: Tar macOS artifacts
      run: cd ./publish/osx-x64 && tar -czvf ../../YourAppName-${{ steps.get_version.outputs.VERSION }}-osx-x64.tar.gz .
      
    - name: Tar Linux artifacts
      run: cd ./publish/linux-x64 && tar -czvf ../../YourAppName-${{ steps.get_version.outputs.VERSION }}-linux-x64.tar.gz .
      
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        name: Release ${{ steps.get_version.outputs.VERSION }}
        tag_name: ${{ github.event_name == 'workflow_dispatch' && format('v{0}', github.event.inputs.version) || github.ref }}
        draft: false
        prerelease: ${{ steps.get_version.outputs.PRERELEASE }}
        files: |
          YourAppName-${{ steps.get_version.outputs.VERSION }}-win-x64.zip
          YourAppName-${{ steps.get_version.outputs.VERSION }}-osx-x64.tar.gz
          YourAppName-${{ steps.get_version.outputs.VERSION }}-linux-x64.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
